name: Build and Deploy Infrastructure

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "ap-south-1"

jobs:
  build-ami:
    name: Build AMI with Packer
    runs-on: ubuntu-latest

    outputs:
      ami_id: ${{ steps.build-ami.outputs.ami_id }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Packer
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip
          curl -fsSL -o packer.zip https://releases.hashicorp.com/packer/1.8.4/packer_1.8.4_linux_amd64.zip
          unzip packer.zip
          sudo mv packer /usr/local/bin/
          packer --version

      - name: Configure AWS Credentials for Packer
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Run Packer Build
        id: build-ami
        run: |
          cd ./packer_build
          packer init aws-ubuntu.pkr.hcl
          packer validate aws-ubuntu.pkr.hcl
          packer build -machine-readable aws-ubuntu.pkr.hcl | tee output.txt
          AMI_ID=$(grep -oP '(?<=artifact,0,id,)[^,]*' output.txt | cut -d':' -f2)
          echo "Extracted AMI ID: $AMI_ID"
          echo "::set-output name=ami_id::$AMI_ID"

  deploy-infra:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest
    needs: build-ami

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Terraform
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update -y
          sudo apt-get install -y terraform

      - name: Configure AWS Credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        run: |
          cd ./main
          terraform init

      - name: Validate Terraform
        run: |
          cd ./main
          terraform validate

      - name: Plan Terraform Deployment
        run: |
          cd ./main
          terraform plan -var-file="terraform.tfvars" -input=false

      - name: Apply Terraform Deployment
        run: |
          cd ./main
          terraform apply -auto-approve -var-file="terraform.tfvars"
      # - name: Destroy Terraform Infrastructure
      #   if: always() # Ensures this step runs even if previous steps fail
      #   run: |
      #     cd ./main
      #     terraform destroy -auto-approve -var-file="terraform.tfvars"    
